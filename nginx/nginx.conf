worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # root vs alias directive
    # root = when root specified and accessing a specifi location like /fruits, root is gonna append /fruits to the path given to root
    # alias = when accessing a specifc location like /fruits it wont append /fruits to the end of the path
    # server {
    #     # listens to port 8080
    #     listen 8080;
    #     # this is the path from where it will serve static files
    #     root C:/Users/Catalin-Vasile/OneDrive/Desktop/files;
    # }


    ### Laravel Configuration ###
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;
        # root directory from where to serve the assets (the public dir in this case)
        # root C:/Users/Catalin-Vasile/OneDrive/Desktop/url_shortener/URL-Shortener/user_service/public;
        root /var/www/html/public;
        index index.php index.html;

        # Sicherheitsheader
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";

        charset utf-8;

        # Haupt-Location für alle Anfragen, egal ob man /home oder /about abruft
        location / {
            # Versucht zuerst die angefragte Datei im root (siehe oben) dir zu finden, falls nicht gefunden: an index.php weiterleiten
            try_files $uri $uri/ /index.php?$query_string;
        }

        location /shorten-service/ {
            # internal - directive allows only internal requests (ex: Laravel)
            internal;
            # when working with docker:
            proxy_pass http://shorten-service:5001/;
            # proxy_pass http://localhost:5001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /redirect-service/ {
            internal;
            # when working with docker
            proxy_pass http://redirect-service:5002/;
            # proxy_pass http://localhost:5002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /favicon.ico { 
            access_log off; 
            log_not_found off; 
        }
        location = /robots.txt  { 
            access_log off; 
            log_not_found off; 
        }

        error_page 404 /index.php;

        # PHP-Verarbeitung (nur für index.php)
        # achtung! php cgi muss im Hintergrund auf port 9000 laufen damit das funktioniert.
        # um php csgi zu starten: wechsle zu directory php in C:/ und dann ausführen mit php-cgi.exe -b 127.0.0.1:9000
        location ~ ^/index\.php(/|$) {
            # Verbindung zu PHP-CGI (läuft auf Port 9000)
            fastcgi_pass user-service:9000;
            fastcgi_index index.php;
            # Übergibt den Pfad der PHP-Datei an PHP
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_hide_header X-Powered-By;
        }

        # Blockiere Zugriff auf versteckte Dateien
        location ~ /\.(?!well-known).* {
            deny all;
        }
    }

    # server {
    #     listen       50;
    #     server_name  localhost;

    #     #charset koi8-r;

    #     #access_log  logs/host.access.log  main;

    #     location / {
	#     proxy_pass http://localhost:8000/home;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }

    #     #error_page  404              /404.html;

    #     # redirect server error pages to the static page /50x.html
    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   html;
    #     }

    #     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #     #
    #     #location ~ \.php$ {
    #     #    proxy_pass   http://127.0.0.1;
    #     #}

    #     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #     #
    #     #location ~ \.php$ {
    #     #    root           html;
    #     #    fastcgi_pass   127.0.0.1:9000;
    #     #    fastcgi_index  index.php;
    #     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #     #    include        fastcgi_params;
    #     #}

    #     # deny access to .htaccess files, if Apache's document root
    #     # concurs with nginx's one
    #     #
    #     #location ~ /\.ht {
    #     #    deny  all;
    #     #}
    # }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
