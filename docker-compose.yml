version: '3.8'

volumes:
  mongodb_data:
  mysql_data:

services:
  nginx:
    image: nginx:1.28.0
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./user_service:/var/www/html
    depends_on:
      - shorten-service
      - redirect-service
      - user-service
    networks:
      - micro-network
  shorten-service:
    build: shorten_service/.
    ports:
      - "5001:5001"
    expose:
      - 5001
    container_name: cshorten-service
    depends_on:
      - shorten-db
    networks:
      - micro-network
    restart: unless-stopped

  redirect-service:
    build: redirect_service/.
    ports:
      - "5002:5002"
    expose:
      - 5002
    container_name: credirect-service
    networks:
      - micro-network
    restart: unless-stopped

  user-service:
    build: user_service/.
    ports:
      - "9000:9000"
    expose:
      - 9000
    volumes:
      - ./user_service:/var/www/html
    container_name: cuser-service
    depends_on:
      - user-db
    networks:
      - micro-network
    restart: unless-stopped
    
  shorten-db:
    image: mongo:8.0.10
    container_name: shorten_dbase
    ports:
      - "27017:27017"
    environment:
      - MONGO_URI=mongodb://host.docker.internal:27017/shorten_service
    networks:
      - micro-network
    volumes:
      - mongodb_data:/data/db

  user-db:
    image: mysql:8.0.42
    container_name: user-dbase
    environment:
      - MYSQL_ROOT_PASSWORD= admin123!
      - MYSQL_DATABASE= user-service
      - MYSQL_USER= root
      - MYSQL_PASSWORD= admin123!
    networks:
      - micro-network
    volumes:
      - mysql_data:/var/lib/mysql

networks:
  micro-network:
    # internal: true
    driver: bridge